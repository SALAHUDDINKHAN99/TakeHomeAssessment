{
	"name": "pl_gold_to_dwh",
	"properties": {
		"activities": [
			{
				"name": "Get Gold Tables Metadata",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_adls_gold_parquet",
						"type": "DatasetReference",
						"parameters": {
							"gold_dir": {
								"value": "@concat('')",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "ParquetReadSettings"
					}
				}
			},
			{
				"name": "ForEach Gold Table",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Gold Tables Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Gold Tables Metadata').output.childItems\n",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copy Tables From Gold To DWH",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ParquetSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": false,
										"wildcardFolderPath": {
											"value": "@item().name",
											"type": "Expression"
										},
										"wildcardFileName": "*.parquet",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "ParquetReadSettings"
									}
								},
								"sink": {
									"type": "SnowflakeV2Sink",
									"preCopyScript": {
										"value": "@concat('TRUNCATE TABLE THA.',toUpper(item().name))",
										"type": "Expression"
									},
									"importSettings": {
										"type": "SnowflakeImportCopyCommand"
									}
								},
								"enableStaging": true,
								"stagingSettings": {
									"linkedServiceName": {
										"referenceName": "ls_blob",
										"type": "LinkedServiceReference"
									},
									"path": "snowflake-staging"
								}
							},
							"inputs": [
								{
									"referenceName": "ds_adls_gold_parquet",
									"type": "DatasetReference",
									"parameters": {
										"gold_dir": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_SnowflakeTable",
									"type": "DatasetReference",
									"parameters": {
										"sf_tablename": {
											"value": "@toUpper(item().name)",
											"type": "Expression"
										},
										"Account_name": {
											"value": "@pipeline().parameters.metadata_values.sf_account_name",
											"type": "Expression"
										},
										"Database": {
											"value": "@pipeline().parameters.metadata_values.sf_database_name",
											"type": "Expression"
										},
										"Warehouse": {
											"value": "@pipeline().parameters.metadata_values.sf_warehouse_name",
											"type": "Expression"
										},
										"User_name": {
											"value": "@pipeline().parameters.metadata_values.sf_user_name",
											"type": "Expression"
										},
										"Secret_name": {
											"value": "@pipeline().parameters.metadata_values.sf_password",
											"type": "Expression"
										},
										"Role": {
											"value": "@pipeline().parameters.metadata_values.sf_role",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Log DWH Ingestion Failure",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "Copy Tables From Gold To DWH",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/DatabricksNotebooks/Insertion_Scripts/log_record_insertion",
								"baseParameters": {
									"loadId": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"logTimeStamp": {
										"value": "@convertFromUtc(utcNow(), 'India Standard Time', 'yyyy-MM-dd HH:mm:ss')",
										"type": "Expression"
									},
									"status": {
										"value": "@concat('ERROR : ',activity('Copy Tables From Gold To DWH').Error.message)",
										"type": "Expression"
									},
									"logMessage": {
										"value": "@concat('Failed to ingest denormalized reporting ready table \"',item().name,'\" into SNOWFLAKE DWH.')",
										"type": "Expression"
									},
									"pipeLineName": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"triggerType": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_databricks",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Log DWH Ingestion Success",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "Copy Tables From Gold To DWH",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/DatabricksNotebooks/Insertion_Scripts/log_record_insertion",
								"baseParameters": {
									"loadId": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"logTimeStamp": {
										"value": "@convertFromUtc(utcNow(), 'India Standard Time', 'yyyy-MM-dd HH:mm:ss')",
										"type": "Expression"
									},
									"status": "Success!",
									"logMessage": {
										"value": "@concat('Successfully ingested ',activity('Copy Tables From Gold To DWH').output.rowsCopied,' records out of ',activity('Copy Tables From Gold To DWH').output.rowsRead,' available into denormalized reporting ready table \"',item().name,'\" in the SNOWFLAKE DWH.')",
										"type": "Expression"
									},
									"pipeLineName": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"triggerType": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_databricks",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"metadata_values": {
				"type": "object"
			}
		},
		"annotations": []
	}
}